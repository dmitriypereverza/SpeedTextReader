{"version":3,"sources":["services/BookContentParserService/index.ts","components/Wrapper/index.tsx","services/FileService/index.ts","di.ts","libs/colors.ts","libs/styles.ts","components/FileInput/index.tsx","components/HumanSpeedReader/index.tsx","libs/useForceUpdate.ts","libs/useDebounce.ts","App.tsx","libs/pureConnect.tsx","index.tsx"],"names":["BookFormatEnum","StyledWrapper","styled","div","React","memo","forwardRef","props","ref","styles","as","appendProps","children","FileService","file","reader","FileReader","readAsText","Promise","resolve","reject","onload","result","onerror","error","BookContentParserService","content","format","FB2","text","Array","from","matchAll","map","el","replace","TXT","parseTxt","buildContainer","params","classes","fileService","class","bookContentParserService","colors","background","dimmedBlue0","dimmedBlue1","dimmedBlue2","dimmedBlue3","dimmedBlue4","blue0","blue1","blue2","blue3","blue35","blue4","white","red","red2","blackTransparent","transparent","orangeBackground","green","greenBackground","grayBackground","systemBlue","systemPurple","systemGreen","systemRed","systemYellow","systemFrenchRose","systemCumin","systemVictoria","systemOrange","green0","green1","green2","green3","green35","greenOverlay","orange","orange2","identity","ident","getColor","curry","color","stringOrPixels","value","is","String","propertyName","val","backgroundColor","css","memoizeWith","width","minWidth","maxWidth","height","minHeight","maxHeight","Aligns","flex","fullWidth","grow","basis","shrink","fullHeight","padding","margin","marginLeft","marginRight","marginTop","marginBottom","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","offsetX","offsetY","blurRadius","position","left","right","top","bottom","transform","FileAccept","jc","ai","maxSize","accept","ALL","view","onFileLoaded","useRef","useEffect","current","document","createElement","type","style","display","onchange","event","selectedFile","target","files","size","body","appendChild","removeChild","click","StyledHumanSpeedReader","WordContainer","WordInText","span","active","useWordReader","sentences","useState","isWorking","setIsWorking","speed","setSpeed","wordIndex","subscription","forceUpdate","updateState","useCallback","useForceUpdate","setNextIndex","nextIndex","path","start","stop","interval","subscribe","unsubscribe","setWordIndex","index","pause","speedSliderVal","setSpeedSliderVal","debouncedSetSpeed","func","time","timer","cb","args","clearTimeout","setTimeout","useDebounce","Wrapper","Group","onChange","ev","Button","tooltipVisible","min","max","onClick","sentI","wordI","startIndex","endIndex","slice","sent","sentIndex","currentRowIndex","activeSentence","key","word","activeWord","renderSentences","pureConnect","contextToProps","Cmp","MemoCmp","contextProps","di","get","setSentences","CENTER","FileInput","BOOKS","a","getFileContent","parse","spitedWordInSentences","split","open","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1429d538.chunk.js","sourcesContent":["export interface BookContentParserServiceInterface {\n  parse(content: string, format: BookFormatEnum): string[];\n}\nexport enum BookFormatEnum {\n  FB2,\n  TXT,\n}\n\nfunction parseFb2(text: string): string[] {\n  return Array.from(text.matchAll(/(?<=<p>).+?(?=<\\/p>)/gm)).map((el) =>\n    el[0].replace(/<[^>]*>?/gm, \"\")\n  );\n}\n\nfunction parseTxt(text: string): string[] {\n  return [text];\n}\n\nexport class BookContentParserService\n  implements BookContentParserServiceInterface {\n  public parse(content: string, format: BookFormatEnum): string[] {\n    switch (format) {\n      case BookFormatEnum.FB2:\n        return parseFb2(content);\n      case BookFormatEnum.TXT:\n        return parseTxt(content);\n      default:\n        return [];\n    }\n  }\n}\n","import React, { forwardRef, ReactNode } from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst StyledWrapper = styled.div``;\n\ninterface WrapperInterface {\n  styles?: any[];\n  as?: any;\n  appendProps?: any;\n  children?: ReactNode;\n}\n\nexport default React.memo(\n  forwardRef(function (props: WrapperInterface, ref) {\n    const { styles, as, appendProps, children } = props;\n    return (\n      <StyledWrapper ref={ref} css={styles} as={as} {...appendProps}>\n        {children}\n      </StyledWrapper>\n    );\n  }),\n);\n","export interface FileServiceInterface {\n  getFileContent(file: File): Promise<string>;\n}\n\nexport class FileService implements FileServiceInterface {\n  public getFileContent(file: File): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsText(file);\n    return new Promise<string>((resolve, reject) => {\n      reader.onload = function () {\n        resolve(reader.result as string);\n      };\n      reader.onerror = function () {\n        reject(reader.error);\n      };\n    });\n  }\n}\n","import { buildContainer } from \"ts-di-injector\";\nimport { FileServiceInterface, FileService } from \"./services/FileService\";\nimport {\n  BookContentParserService,\n  BookContentParserServiceInterface,\n} from \"./services/BookContentParserService\";\n\nexport default buildContainer<{\n  fileService: FileServiceInterface;\n  bookContentParserService: BookContentParserServiceInterface;\n}>({\n  params: {},\n  classes: {\n    fileService: {\n      class: FileService,\n    },\n    bookContentParserService: {\n      class: BookContentParserService,\n    },\n  },\n});\n","export const colors = {\n  background: \"#F5F5F8\",\n  dimmedBlue0: \"#F7F9FA\",\n  dimmedBlue1: \"#E5E9EB\",\n  dimmedBlue2: \"#9BA8BB\",\n  dimmedBlue3: \"#65748A\",\n  dimmedBlue4: \"#363E4A\",\n\n  blue0: \"#F6F9FE\",\n  blue1: \"#D5E3FB\",\n  blue2: \"#6699F0\",\n  blue3: \"#1D6BF6\",\n  blue35: \"#0848BA\",\n  blue4: \"#05307B\",\n  white: \"#FFFFFF\",\n\n  red: \"#EF5656\",\n  red2: \"#EB5757\",\n  error: \"rgb(239, 86, 86, .15)\",\n\n  blackTransparent: \"rgba(0, 0, 0, 0.1)\",\n  transparent: \"rgba(0, 0, 0, 0)\",\n\n  orangeBackground: \"rgba(255, 134, 46, .15)\",\n\n  green: \"#A0B336\",\n  greenBackground: \"rgba(160, 179, 54, .15)\",\n\n  grayBackground: \"rgba(101, 116, 138, 0.15)\",\n\n  systemBlue: \"#3D7EBB\",\n  systemPurple: \"#9428C0\",\n  systemGreen: \"#5BC524\",\n  systemRed: \"#CE1804\",\n  systemYellow: \"#F4C524\",\n  systemFrenchRose: \"#F35588\",\n  systemCumin: \"#8F4426\",\n  systemVictoria: \"#4503D0\",\n  systemOrange: \"#F58546\",\n\n  green0: \"#E0F7D4\",\n  green1: \"#65C99C\",\n  green2: \"#7EC757\",\n  green3: \"#49AE13\",\n  green35: \"#2C7406\",\n  greenOverlay: \"#e4f3dc\",\n\n  orange: \"#FF862E\",\n  orange2: \"#FA9F5A\",\n};\n","import { curry, identity as ident, is, memoizeWith } from \"ramda\";\nimport { css } from \"styled-components/macro\";\n\nimport { colors } from \"./colors\";\n\nconst identity = ident as any;\n\nexport type Colors = string | keyof typeof colors;\n\nexport const getColor = curry(function (color: Colors) {\n  const currentColor = colors[color];\n  return currentColor || color;\n});\n\nexport const stringOrPixels = (value: number | string) =>\n  is(String, value) ? value : `${value}px`;\n\nexport const stringOrPixelsProp = curry((propertyName: string, props: any) =>\n  stringOrPixels(props[propertyName])\n);\n\nexport const toPixelsProp = curry(\n  (val: number | string, props: any) => `${props[val]}px`\n);\n\nexport function background(background: string) {\n  return css`\n    background: ${background};\n  `;\n}\n\nexport function backgroundColor(backgroundColor: Colors) {\n  return css`\n    background-color: ${getColor(backgroundColor)};\n  `;\n}\n\nexport function backgroundImage(value) {\n  return css`\n    background-image: ${value};\n  `;\n}\n\nexport function border(size: number, color: Colors, mode = \"solid\") {\n  return css`\n    border: ${size}px ${mode} ${getColor(color)};\n  `;\n}\n\nexport const borderNone = css`\n  border: 0;\n`;\n\nexport function borderBottom(size: number, color: Colors) {\n  return css`\n    border-bottom: ${size}px solid ${getColor(color)};\n  `;\n}\n\nexport function borderLeft(size: number, color: Colors) {\n  return css`\n    border-left: ${size}px solid ${getColor(color)};\n  `;\n}\n\nexport function borderTop(size: number, color: Colors) {\n  return css`\n    border-top: ${size}px solid ${getColor(color)};\n  `;\n}\n\nexport function borderRight(size: number, color: Colors) {\n  return css`\n    border-right: ${size}px solid ${getColor(color)};\n  `;\n}\n\nexport const width = memoizeWith(identity, function (width: string | number) {\n  return css`\n    width: ${stringOrPixels(width)};`;\n});\n\nexport const minWidth = memoizeWith(identity, function (\n  minWidth: string | number\n) {\n  return css`\n    min-width: ${stringOrPixels(minWidth)};\n  `;\n});\n\nexport const maxWidth = memoizeWith(identity, function (\n  maxWidth: string | number\n) {\n  return css`\n    max-width: ${stringOrPixels(maxWidth)};\n  `;\n});\n\nexport const height = memoizeWith(identity, function (height: string | number) {\n  return css`\n    height: ${stringOrPixels(height)};`;\n});\n\nexport const minHeight = memoizeWith(identity, function (\n  minHeight: string | number\n) {\n  return css`\n    min-height: ${stringOrPixels(minHeight)};\n  `;\n});\n\nexport const maxHeight = memoizeWith(identity, function (\n  maxHeight: string | number\n) {\n  return css`\n    max-height: ${stringOrPixels(maxHeight)};\n  `;\n});\n\nexport const flex = css`\n  display: flex;\n`;\n\nexport const inlineFlex = css`\n  display: inline-flex;\n`;\n\nexport const flexWrap = css`\n  flex-wrap: wrap;\n`;\n\nexport const flexValue = memoizeWith(identity, function (value: string) {\n  return css`\n    flex: ${value};`;\n});\n\nexport const flexGrow = memoizeWith(identity, function (grow: number) {\n  return css`\n    flex-grow: ${grow};`;\n});\n\nexport const flexBasis = memoizeWith(identity, function (\n  basis: number | string\n) {\n  return css`\n    flex-basis: ${stringOrPixels(basis)};\n  `;\n});\n\nexport const flexShrink = memoizeWith(identity, function (shrink: number) {\n  return css`\n    flex-shrink: ${shrink};`;\n});\n\nexport const fullWidth = css`\n  width: 100%;\n`;\n\nexport const fullHeight = css`\n  height: 100%;\n`;\n\nexport const flexColumn = css`\n  flex-direction: column;\n`;\n\nexport const margin = memoizeWith(identity, function (margin: string | number) {\n  return css`\n    margin: ${stringOrPixels(margin)};`;\n});\n\nexport const marginLeft = memoizeWith(identity, function (\n  marginLeft: string | number\n) {\n  return css`\n    margin-left: ${stringOrPixels(marginLeft)};\n  `;\n});\n\nexport const marginRight = memoizeWith(identity, function (\n  marginRight: string | number\n) {\n  return css`\n    margin-right: ${stringOrPixels(marginRight)};\n  `;\n});\n\nexport const marginTop = memoizeWith(identity, function (\n  marginTop: string | number\n) {\n  return css`\n    margin-top: ${stringOrPixels(marginTop)};\n  `;\n});\n\nexport const marginBottom = memoizeWith(identity, function (\n  marginBottom: string | number\n) {\n  return css`\n    margin-bottom: ${stringOrPixels(marginBottom)};\n  `;\n});\n\nexport const padding = memoizeWith(identity, function (\n  padding: string | number\n) {\n  return css`\n    padding: ${stringOrPixels(padding)};\n  `;\n});\n\nexport const paddingLeft = memoizeWith(identity, function (\n  paddingLeft: number\n) {\n  return css`\n    padding-left: ${paddingLeft}px;\n  `;\n});\n\nexport const paddingRight = memoizeWith(identity, function (\n  paddingRight: number\n) {\n  return css`\n    padding-right: ${paddingRight}px;\n  `;\n});\n\nexport const paddingTop = memoizeWith(identity, function (paddingTop: number) {\n  return css`\n    padding-top: ${paddingTop}px;`;\n});\n\nexport const paddingBottom = memoizeWith(identity, function (\n  paddingBottom: number\n) {\n  return css`\n    padding-bottom: ${paddingBottom}px;\n  `;\n});\n\nexport const borderRadius = memoizeWith(identity, function (\n  borderRadius: number | string\n) {\n  return css`\n    border-radius: ${stringOrPixels(borderRadius)};\n  `;\n});\n\ntype BoxShadow = [number | string, number | string, number | string, Colors];\n\nexport const boxShadow = memoizeWith(\n  ([offsetX, offsetY, blurRadius, color]) =>\n    `${offsetX}_${offsetY}_${blurRadius}_${color}`,\n  function ([offsetX, offsetY, blurRadius, color]: BoxShadow) {\n    return css`\n      box-shadow: ${stringOrPixels(offsetX)} ${stringOrPixels(offsetY)}\n        ${stringOrPixels(blurRadius)} ${getColor(color)};\n    `;\n  }\n) as (config: BoxShadow) => any;\n\ntype Position = \"fixed\" | \"static\" | \"relative\" | \"absolute\";\n\nexport const position = memoizeWith(identity, function (position: Position) {\n  return css`\n    position: ${position};`;\n});\n\nexport const sticky = css`\n  position: fixed;\n  position: -webkit-sticky;\n  position: sticky;\n`;\n\nexport const left = memoizeWith(identity, function (left: string | number) {\n  return css`\n    left: ${stringOrPixels(left)};`;\n});\n\nexport const right = memoizeWith(identity, function (right: string | number) {\n  return css`\n    right: ${stringOrPixels(right)};`;\n});\n\nexport const top = memoizeWith(identity, function (top: string | number) {\n  return css`\n    top: ${stringOrPixels(top)};`;\n});\n\nexport const bottom = memoizeWith(identity, function (bottom: string | number) {\n  return css`\n    bottom: ${stringOrPixels(bottom)};`;\n});\n\nexport const transform = memoizeWith(identity, function (transform: string) {\n  return css`\n    transform: ${transform};`;\n});\n\nexport const absoluteCenter = css`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport enum Aligns {\n  START = \"flex-start\",\n  END = \"flex-end\",\n  CENTER = \"center\",\n  SPACE_AROUND = \"space-around\",\n  SPACE_BETWEEN = \"space-between\",\n  STRETCH = \"stretch\",\n  BASELINE = \"baseline\",\n}\n\nexport const jc = memoizeWith(identity, function (value: Aligns) {\n  return css`\n    justify-content: ${value};`;\n});\n\nexport const alignSelf = memoizeWith(identity, function (value: Aligns) {\n  return css`\n    align-self: ${value};`;\n});\n\nexport const ai = memoizeWith(identity, function (value: Aligns) {\n  return css`\n    align-items: ${value};`;\n});\n\nexport const zIndex = memoizeWith(identity, function (value: number) {\n  return css`\n    z-index: ${value};`;\n});\n\nexport const transition = memoizeWith(identity, function (value: string) {\n  return css`\n    transition: ${value};`;\n});\n\nexport const verticalScroll = css`\n  overflow-y: auto;\n`;\n\nexport const horizontalScroll = css`\n  overflow-x: auto;\n`;\n\nexport const overflow = memoizeWith(identity, function (value: string) {\n  return css`\n    overflow: ${value};`;\n});\n\nexport const overflowX = memoizeWith(identity, function (value: string) {\n  return css`\n    overflow-x: ${value};`;\n});\n\nexport const overflowY = memoizeWith(identity, function (value: string) {\n  return css`\n    overflow-y: ${value};`;\n});\n\nexport const testOverflow = memoizeWith(identity, function (value: string) {\n  return css`\n    text-overflow: ${value};`;\n});\n\nexport const display = memoizeWith(identity, function (value: string) {\n  return css`\n    display: ${value};`;\n});\n\nexport const opacity = memoizeWith(identity, function (value: string) {\n  return css`\n    opacity: ${value};`;\n});\n\nexport const pointer = css`\n  cursor: pointer;\n`;\n\nexport const defaultCursor = css`\n  cursor: default;\n`;\n\nexport const lineHeight = memoizeWith(identity, function (value: number) {\n  return css`\n    line-height: ${stringOrPixels(value)};`;\n});\n\nexport const fontSize = memoizeWith(identity, function (value: number) {\n  return css`\n    font-size: ${stringOrPixels(value)};`;\n});\n\nexport const letterSpacing = memoizeWith(identity, function (value: number) {\n  return css`\n    letter-spacing: ${stringOrPixels(value)};`;\n});\n\nexport const fontWeight = memoizeWith(identity, function (\n  value: string | number\n) {\n  return css`\n    font-weight: ${value};\n  `;\n});\n\nexport const noWrapText = css`\n  white-space: nowrap;\n`;\n\nexport const wrapTextNormal = css`\n  white-space: normal;\n`;\n\nexport const capitalizeFirstLetter = css`\n  display: block;\n  &::first-letter {\n    text-transform: capitalize;\n  }\n`;\n\nexport const textTransform = memoizeWith(identity, function (\n  value: string | number\n) {\n  return css`\n    text-transform: ${value};\n  `;\n});\n\nexport const forAllChild = memoizeWith(identity, function (styles: string) {\n  return css`\n    * {\n      ${styles}\n    }`;\n});\n\nexport const color = memoizeWith(identity, function (value: string) {\n  const color = getColor(value);\n  return css`\n    color: ${color};\n    fill: ${color};`;\n});\n\nexport const hoverColor = memoizeWith(identity, function (value: string) {\n  return css`\n    :hover,\n    :hover span {\n      color: ${getColor(value)};\n    }`;\n});\n\nexport const hover = function (styles: any[], childSelector = \"\") {\n  return css`\n    :hover ${childSelector} {\n      ${styles}\n    }\n  `;\n};\n\nexport const mediaScreen = function (mediaQueries: string, values: string[]) {\n  return css`\n    @media screen and ${mediaQueries} {\n      ${values}\n    }\n  `;\n};\n\nexport const float = memoizeWith(identity, function (value: \"left\" | \"right\") {\n  return css`\n    float: ${value};`;\n});\n\nexport const textAlign = memoizeWith(identity, function (\n  value: \"left\" | \"right\" | \"center\"\n) {\n  return css`\n    text-align: ${value};\n  `;\n});\n\nexport const lastChild = (styles: any[]) => css`\n  &:last-child {\n    ${styles};\n  }\n`;\n","import React from \"react\";\n\nexport enum FileAccept {\n  ALL = \"*\",\n  IMAGE = \".jpeg, .jpg, .png, .bmp\",\n  BOOKS = \".fb2\",\n}\n\ninterface FileInterface {\n  accept?: FileAccept;\n  maxSize?: number;\n  onFileLoaded: (file: File) => void;\n  view: (openDialog: () => void) => JSX.Element;\n}\n\nexport default React.memo(\n  ({ maxSize, accept = FileAccept.ALL, view, onFileLoaded }: FileInterface) => {\n    const file = React.useRef<any>();\n    React.useEffect(() => {\n      file.current = document.createElement(\"input\");\n\n      file.current.accept = accept;\n      file.current.type = \"file\";\n      file.current.style.display = \"none\";\n      file.current.onchange = (event) => {\n        const selectedFile = event.target.files[0];\n        if (!selectedFile) return;\n        file.current.value = \"\";\n        if (maxSize && selectedFile.size > maxSize) return;\n        onFileLoaded(selectedFile);\n      };\n      document.body.appendChild(file.current);\n      return () => document.body.removeChild(file.current);\n    }, []);\n\n    return view(() => file.current && file.current.click());\n  }\n);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components/macro\";\nimport Wrapper from \"../Wrapper\";\nimport {\n  backgroundColor,\n  borderRadius,\n  color,\n  padding,\n} from \"../../libs/styles\";\nimport { Button, Slider, Radio } from \"antd\";\nimport { path } from \"ramda\";\nimport { Subscription, interval } from \"rxjs\";\nimport useForceUpdate from \"../../libs/useForceUpdate\";\nimport { useDebounce } from \"../../libs/useDebounce\";\n\nconst StyledHumanSpeedReader = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  height: 100%;\n`;\n\nconst WordContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 400px;\n  font-size: 64px;\n  font-weight: bold;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst WordInText = styled.span`\n  cursor: pointer;\n  :hover {\n    background-color: whitesmoke;\n  }\n  ${(props) =>\n    props.active\n      ? css`\n          background-color: yellow;\n        `\n      : null}\n`;\n\nfunction startReading({\n  sentences,\n  setCurrentWordIndex,\n  speed,\n}: {\n  sentences: string[][];\n  setCurrentWordIndex: (index: [number, number]) => void;\n  speed: number;\n}) {\n  let nextIndex: [number, number] = [0, 0];\n  const inner = () => {\n    setTimeout(() => {\n      nextIndex = [nextIndex[0], nextIndex[1] + 1];\n      if (path(nextIndex, sentences)) {\n        setCurrentWordIndex(nextIndex);\n        inner();\n        return;\n      }\n      nextIndex = [nextIndex[0] + 1, 0];\n      if (path(nextIndex, sentences)) {\n        setCurrentWordIndex(nextIndex);\n        inner();\n        return;\n      }\n      return;\n    }, speed);\n  };\n  inner();\n}\n\nfunction useWordReader({ sentences }: { sentences: string[][] }) {\n  const [isWorking, setIsWorking] = useState<boolean>(false);\n  const [speed, setSpeed] = useState<number>(300);\n  const wordIndex = useRef<[number, number]>([0, 0]);\n  const subscription = useRef<Subscription>();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (!isWorking) return undefined;\n    stop();\n    start();\n  }, [speed]);\n\n  function setNextIndex() {\n    let nextIndex: [number, number] = [\n      wordIndex.current[0],\n      wordIndex.current[1] + 1,\n    ];\n    if (path(nextIndex, sentences)) {\n      wordIndex.current = nextIndex;\n      forceUpdate();\n      return;\n    }\n    nextIndex = [wordIndex.current[0] + 1, 0];\n    if (path(nextIndex, sentences)) {\n      wordIndex.current = nextIndex;\n      forceUpdate();\n      return;\n    }\n    return;\n  }\n\n  function start() {\n    stop();\n    setIsWorking(true);\n    subscription.current = interval(speed).subscribe(setNextIndex);\n  }\n\n  function stop() {\n    subscription.current?.unsubscribe();\n    setIsWorking(false);\n  }\n  return {\n    wordIndex: wordIndex.current,\n    setWordIndex: (index: [number, number]) => {\n      wordIndex.current = index;\n      forceUpdate();\n    },\n    start,\n    stop,\n    pause: () => subscription.current?.unsubscribe(),\n    setSpeed,\n    speed,\n    isWorking,\n  };\n}\n\ninterface HumanSpeedReaderInterface {\n  sentences: string[][];\n}\nconst HumanSpeedReader = ({ sentences }: HumanSpeedReaderInterface) => {\n  const {\n    start,\n    setSpeed,\n    speed,\n    pause,\n    wordIndex,\n    isWorking,\n    setWordIndex,\n  } = useWordReader({\n    sentences,\n  });\n\n  const [speedSliderVal, setSpeedSliderVal] = useState(speed);\n  const debouncedSetSpeed = useDebounce(setSpeed, 1000);\n\n  function renderSentences() {\n    const [sentI, wordI] = wordIndex;\n    const startIndex = sentI < 3 ? 0 : sentI - 3;\n    const endIndex = sentI + 3;\n\n    return sentences.slice(startIndex, endIndex).map((sent, sentIndex) => {\n      const currentRowIndex = startIndex + sentIndex;\n      const activeSentence = currentRowIndex === sentI;\n      return (\n        <Wrapper\n          key={sentIndex}\n          styles={[\n            activeSentence ? backgroundColor(\"dimmedBlue1\") : [],\n            borderRadius(2),\n          ]}\n        >\n          {sent.map((word, wordIndex) => {\n            const activeWord = activeSentence && wordI === wordIndex;\n            return (\n              <span key={wordIndex}>\n                <WordInText\n                  onClick={() => setWordIndex([currentRowIndex, wordIndex])}\n                  active={activeWord}\n                >\n                  {word}\n                </WordInText>{\" \"}\n              </span>\n            );\n          })}\n        </Wrapper>\n      );\n    });\n  }\n\n  return (\n    <StyledHumanSpeedReader>\n      {isWorking ? (\n        <Wrapper>\n          <WordContainer>\n            {!!wordIndex && (\n              <span>{sentences[wordIndex[0]][wordIndex[1]]}</span>\n            )}\n          </WordContainer>\n          <Radio.Group\n            value={\"\"}\n            onChange={(ev) => {\n              switch (ev.target.value) {\n                case \"start\":\n                  start();\n                  break;\n                case \"pause\":\n                  pause();\n                  break;\n                default:\n                  return;\n              }\n            }}\n          >\n            <Radio.Button value=\"start\">Старт</Radio.Button>\n            <Radio.Button value=\"pause\">Пауза</Radio.Button>\n          </Radio.Group>\n          <Slider\n            tooltipVisible\n            value={speedSliderVal}\n            min={10}\n            max={1500}\n            onChange={(ev) => {\n              setSpeedSliderVal(ev as number);\n              debouncedSetSpeed(ev);\n            }}\n          />\n        </Wrapper>\n      ) : (\n        <Button\n          onClick={() => {\n            start();\n          }}\n        >\n          Начать чтение\n        </Button>\n      )}\n\n      <Wrapper\n        styles={[\n          backgroundColor(\"dimmedBlue0\"),\n          padding(24),\n          color(\"dimmedBlue4\"),\n        ]}\n      >\n        {renderSentences()}\n      </Wrapper>\n    </StyledHumanSpeedReader>\n  );\n};\n\nexport default React.memo(HumanSpeedReader);\n","import { useCallback, useState } from \"react\";\n\nexport default function () {\n  const [, updateState] = useState();\n  return useCallback(() => updateState({}), []);\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\n\nexport function useDebounce(func, time) {\n  const timer = useRef<any>();\n  const cb = useCallback(function (...args) {\n    if (timer) {\n      clearTimeout(timer.current);\n    }\n    timer.current = setTimeout(() => {\n      func(...args);\n    }, time);\n  }, []);\n\n  useEffect(() => {\n    clearTimeout(timer.current);\n  }, [func, time]);\n\n  return cb;\n}\n","import React, { useState } from \"react\";\nimport \"./styles.scss\";\nimport Wrapper from \"./components/Wrapper\";\nimport { Button } from \"antd\";\nimport di from \"./di\";\nimport { ai, Aligns, flex, fullHeight, fullWidth, jc } from \"./libs/styles\";\nimport FileInput, { FileAccept } from \"./components/FileInput\";\nimport { pureConnect } from \"./libs/pureConnect\";\nimport { FileServiceInterface } from \"./services/FileService\";\nimport {\n  BookContentParserServiceInterface,\n  BookFormatEnum,\n} from \"./services/BookContentParserService\";\nimport { split } from \"ramda\";\nimport HumanSpeedReader from \"./components/HumanSpeedReader\";\n\ninterface AppInterface {\n  fileService: FileServiceInterface;\n  bookContentParserService: BookContentParserServiceInterface;\n}\nfunction App({ fileService, bookContentParserService }: AppInterface) {\n  const [sentences, setSentences] = useState<string[][]>();\n  return (\n    <Wrapper\n      styles={[\n        flex,\n        fullHeight,\n        fullWidth,\n        jc(Aligns.CENTER),\n        ai(Aligns.CENTER),\n      ]}\n    >\n      {!sentences ? (\n        <FileInput\n          accept={FileAccept.BOOKS}\n          onFileLoaded={async (file) => {\n            const content = await fileService.getFileContent(file);\n            const sentences = bookContentParserService.parse(\n              content,\n              BookFormatEnum.FB2\n            );\n            const spitedWordInSentences = sentences.map(split(\" \"));\n            setSentences(spitedWordInSentences);\n          }}\n          view={(open) => <Button onClick={open}>Upload</Button>}\n        />\n      ) : (\n        <HumanSpeedReader sentences={sentences} />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default pureConnect(\n  () => ({\n    fileService: di.get(\"fileService\"),\n    bookContentParserService: di.get(\"bookContentParserService\"),\n  }),\n  App\n);\n","import React, { FC } from \"react\";\n\nexport function pureConnect<P extends object, G extends Partial<P>>(\n  contextToProps: () => G,\n  Cmp: FC<P>,\n) {\n  const MemoCmp = React.memo(Cmp);\n  return function (props: Omit<P, keyof G>) {\n    const contextProps = contextToProps();\n    return <MemoCmp {...(props as P)} {...(contextProps as G)} />;\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}